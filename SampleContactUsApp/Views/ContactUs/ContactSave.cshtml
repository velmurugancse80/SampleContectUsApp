@model SampleContactUsApp.Models.ContactUsForm

@{
    ViewBag.Title = "ContactSave";
}
@{
    if (TempData["message"] != null)
    {
        <script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
        </script>
    }
}
<script type="text/javascript">



    function Validate() {
        if (document.getElementById('Email').value == '') {
            alert('Email Can not be blank');
            return false;
        }
        return true;
    }

</script>

<style>
    h1 {
        font: bold 38px Arial;
    }

    label {
        font: 16px arial;
    }

    .input {
        font: 16px arial;
        border: 2px solid #1997B7;
        width: 100%;
    }

    textarea {
        font: 16px arial;
        border: 2px solid #1997B7;
        width: 500px;
    }

    .submit {
        font: normal 16px arial;
        height: 36px;
        background-color: blue;
        color: white;
        width: 100%;
    }

        .submit:hover {
            font: normal 16px arial;
            height: 36px;
            background-color: #1997B7;
            color: white;
            width: 100%;
        }
</style>

<h2>Contact Us Form</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control, input" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control, input" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control, input" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="submit" onclick="return Validate();" />
            </div>
        </div>
    </div>
}


